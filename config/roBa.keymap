#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp L         &kp U         &kp COMMA    &kp PERIOD                                                                    &kp F            &kp W    &kp R  &kp Y  &kp P
&kp E             &kp I         &kp A         &kp O        &kp MINUS    &kp TAB                              &kp MINUS                   &kp K            &kp T    &kp N  &kp S  &kp H
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V        &kp PLUS     &kp SLASH                            &kp SEMICOLON               &kp G            &lt 2 D  &kp M  &kp J  &mt RIGHT_SHIFT B
&kp LCTRL         &kp LEFT_ALT  &kp LEFT_GUI  &lt 1 ENTER  &lt 2 SPACE  &lt_to_layer_0 3 LC(LANG_HANJA)      &mt RIGHT_WIN LANG_HANGEUL  &lt 1 BACKSPACE                         &lt_to_layer_0 5 LC(ESCAPE)
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND   &kp LCTRL        &kp SLASH                                    &kp NON_US_BACKSLASH  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN
&kp PLUS     &kp HASH    &kp ASTERISK    &kp AT_SIGN      &kp EQUAL     &trans      &kp LC(LG(SPACE))  &kp UNDERSCORE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SEMICOLON  &kp COLON
&kp MINUS    &kp GRAVE   &kp UNDERSCORE  &kp EXCLAMATION  &kp QUESTION  &trans      &trans             &kp PIPE              &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SQT        &kp DOUBLE_QUOTES
&kp LCTRL    &trans      &trans          &trans           &trans        &trans      &kp RIGHT_GUI      &kp BACKSPACE                                                                     &kp F12
            >;
        };

        NUM {
            bindings = <
&kp EQUAL  &kp KP_NUMBER_9  &kp KP_NUMBER_8  &kp KP_NUMBER_7  &kp COMMA                                       &kp CARET         &kp HOME           &kp UP_ARROW    &kp END          &kp RIGHT_PARENTHESIS
&kp COLON  &kp KP_NUMBER_6  &kp KP_NUMBER_5  &kp KP_NUMBER_4  &kp PERIOD       &kp PLUS       &kp UNDERSCORE  &kp PAGE_UP       &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp PAGE_DOWN
&kp SLASH  &kp KP_NUMBER_3  &kp KP_NUMBER_2  &kp KP_NUMBER_1  &kp KP_NUMBER_0  &kp MINUS      &trans          &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &mkp LCLK       &mkp RCLK        &kp BACKSLASH
&trans     &trans           &trans           &trans           &trans           &trans         &kp RIGHT_GUI   &kp BACKSPACE                                                         &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp F15         &kp F9  &kp F8         &kp F7  &kp F10                              &kp LC(LA(ENTER))       &kp LC(LA(LG(LEFT_ARROW)))  &kp LC(UP_ARROW)    &kp LA(LC(LG(RIGHT_ARROW)))  &kp LC(LA(MINUS))
&kp F14         &kp F6  &kp F5         &kp F4  &kp C_VOLUME_UP  &trans      &trans  &kp LC(LA(LEFT_ARROW))  &kp LC(LEFT_ARROW)          &kp LC(DOWN_ARROW)  &kp LC(RIGHT_ARROW)          &kp LC(LA(RIGHT_ARROW))
&kp LEFT_SHIFT  &kp F3  &kp F2         &kp F1  &kp C_VOL_DN     &trans      &trans  &kp LG(LEFT_ARROW)      &kp LG(RIGHT_ARROW)         &mkp LCLK           &mkp RCLK                    &kp RG(L)
&trans          &trans  &kp LC(LG(Q))  &trans  &trans           &trans      &trans  &trans                                                                                               &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
